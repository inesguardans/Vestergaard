shiny::runApp('C:/Users/IGG/Dropbox/Vestergaard LLIN Efficiency Table/R_ines/trial')
runApp('C:/Users/IGG/Dropbox/Vestergaard LLIN Efficiency Table/R_ines/trial')
runExample("02_text")       # tables and data frames
shiny::runApp('C:/Users/IGG/Dropbox/Github/Vestergaard')
runApp('C:/Users/IGG/Dropbox/Github/Vestergaard')
runApp('C:/Users/IGG/Dropbox/Github/Vestergaard')
runApp('C:/Users/IGG/Dropbox/Github/Vestergaard')
runApp('C:/Users/IGG/Dropbox/Github/Vestergaard')
runApp('C:/Users/IGG/Dropbox/Github/Vestergaard')
b_plan<- read_excel("B_plan_data.xlsx")%>%
#mutate(Amount = round(Amount, 0))%>%
as.data.frame()
setwd("C:/Users/IGG/Dropbox/Github/Vestergaard")
b_plan<- read_excel("B_plan_data.xlsx")%>%
#mutate(Amount = round(Amount, 0))%>%
as.data.frame()
df <- b_plan
r1 <- df[19,]
r2 <- df[22,]
r3 <- df[25,]
r4 <- df[28,]
r5 <- df[30,]
r6 <- df[33,]
df1 <- rbind(r1, r2, r3, r4, r5, r6) %>%
as.data.frame() %>%
mutate(difference = (df1[1,3] - Amount),
axis = c("Baseline lost value (all nets)", "Lost value with loss reduction",
"Lost value with usage improvement", "Lost value with bioefficacy improvement", "Lost value with wear and tear improvement",
"Lost value with effectiveness improvement")) %>%
arrange(difference)
df1$lab <- "Gains due to improvements from baseline loss"
df1 <- rbind(r1, r2, r3, r4, r5, r6) %>%
as.data.frame() %>%
mutate(difference = (df1[1,3] - Amount),
axis = c("Baseline lost value (all nets)", "Lost value with loss reduction",
"Lost value with usage improvement", "Lost value with bioefficacy improvement", "Lost value with wear and tear improvement",
"Lost value with effectiveness improvement")) %>%
arrange(difference)
df1 <- rbind(r1, r2, r3, r4, r5, r6) %>%
as.data.frame()
df1 <- df1 %>%
mutate(difference = (df1[1,3] - Amount),
axis = c("Baseline lost value (all nets)", "Lost value with loss reduction",
"Lost value with usage improvement", "Lost value with bioefficacy improvement", "Lost value with wear and tear improvement",
"Lost value with effectiveness improvement")) %>%
arrange(difference)
df1$lab <- "Gains due to improvements from baseline loss"
p1 <- df1 %>%
ggplot(aes(x = axis, y = difference, text = paste("Gain in value of LLINs", difference))) +
geom_bar( stat = "identity", fill = "#8DD3C7", width = 0.4)+
facet_wrap(~lab)+
labs(x = "", y = "")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text = element_text(size = 10), axis.text.x = element_text(angle = 45),  axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, hjust = 0.5), axis.title.x = element_text(size = 10), strip.background =element_rect(fill="white"),
strip.text = element_text(size = 10, face = "bold", hjust = 0.5))
ply1 <- ggplotly(p1, tooltip = c("text"))
ply1
runApp()
runApp()
runApp()
runApp()
runApp()
p1 <- df1 %>%
ggplot(aes(reorder(x = axis, -difference), y = difference, text = paste("Gain in value of LLINs", difference))) +
geom_bar( stat = "identity", fill = "#8DD3C7", width = 0.4)+
facet_wrap(~lab)+
labs(x = "", y = "")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text = element_text(size = 10), axis.text.x = element_text(angle = 45),  axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, hjust = 0.5), axis.title.x = element_text(size = 10), strip.background =element_rect(fill="white"),
strip.text = element_text(size = 10, face = "bold", hjust = 0.5))
ply1 <- ggplotly(p1, tooltip = c("text"))
ply1
runApp()
runApp()
runApp()
runApp()
Ordered <- df1[order(-df1$Amount), "axis"]
df2 <- df1 %>% mutate(axis = factor(axis, levels = Ordered, ordered = TRUE))
View(df2)
df1 <- rbind(r1, r2, r3, r4, r5, r6) %>%
as.data.frame()
df1 <- df1 %>%
mutate(difference = (df1[1,3] - Amount),
axis = c("Baseline lost value (all nets)", "Lost value with loss reduction",
"Lost value with usage improvement", "Lost value with bioefficacy improvement", "Lost value with wear and tear improvement",
"Lost value with effectiveness improvement")) %>%
arrange(difference)
Ordered <- df1[order(-df1$Amount), "axis"]
df2 <- df1 %>% mutate(axis = factor(axis, levels = Ordered, ordered = TRUE))
Ordered <- df1[order(-df1$Amount), "axis"]
Ordered
runApp()
runApp()
df1 <- df1 %>%
mutate(axis = c("Baseline lost value (all nets)", "Lost value with loss reduction",
"Lost value with usage improvement", "Lost value with bioefficacy improvement", "Lost value with wear and tear improvement",
"Lost value with effectiveness improvement"),
difference = Amount[1] - Amount)%>%
arrange(desc(difference))
df1
df1 <- df1 %>%
mutate(axis = c("Baseline lost value (all nets)", "Lost value with loss reduction",
"Lost value with usage improvement", "Lost value with bioefficacy improvement", "Lost value with wear and tear improvement",
"Lost value with effectiveness improvement"),
difference = Amount[1] - Amount)%>%
arrange(difference)
df1
df1 <- df1 %>%
mutate(axis = c("Baseline lost value (all nets)", "Lost value with loss reduction",
"Lost value with usage improvement", "Lost value with bioefficacy improvement", "Lost value with wear and tear improvement",
"Lost value with effectiveness improvement"),
difference = Amount[1] - Amount)
df1
runApp()
runApp()
summarise(df1)
str(df1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
r1 <- c("$ 1,230", "$1,500,000", "$5,200,230")
fake_char <- c("$ 1,230", "$1,500,000", "$5,200,230")
str(fake_char)
num <- as.numeric(gsub(",", "", gsub("$", ""), fake_char))
num1 <- gsub(",", "", fake_char))
num1 <- gsub(",", "", fake_char)
num2 <- gsub("$", "", num1)
num1
num2
num2 <- gsub("\\$", "", num1)
num2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
r1 <- df[19,]
r2 <- df[22,]
r3 <- df[25,]
r4 <- df[28,]
r5 <- df[30,]
r6 <- df[33,]
r7 <- df[36,]
df1 <- rbind(r1, r2, r3, r4, r5, r6)
df1 <- df1 %>%
mutate(axis = c("Baseline lost value (all nets)", "Gain from loss reduction",
"Gain from usage improvement", "Gain from bioefficacy improvement", "Lost value with wear and tear improvement",
"Gain from effectiveness improvement"),
Amount = as.numeric(gsub(",", "", gsub("\\$", "", Amount))),
gain = Amount[1]-Amount)
df1$lab <- "Gains due to improvements from baseline loss ($)"
df2 <- rbind(df1, r7)%>%
mutate(Amount = as.numeric(gsub(",", "", gsub("\\$", "", Amount))),
gain = Amount)
df2 <- rbind(df1, r7)
View(r7)
df1 <- rbind(r1, r2, r3, r4, r5, r6, r7)
df1 <- df1 %>%
mutate(axis = c("Baseline lost value (all nets)", "Gain from loss reduction",
"Gain from usage improvement", "Gain from bioefficacy improvement", "Lost value with wear and tear improvement",
"Gain from effectiveness improvement"),
Amount = as.numeric(gsub(",", "", gsub("\\$", "", Amount))),
gain[1:6] = Amount[1]-Amount)
df1 <- df1 %>%
mutate(axis = c("Baseline lost value (all nets)", "Gain from loss reduction",
"Gain from usage improvement", "Gain from bioefficacy improvement", "Lost value with wear and tear improvement",
"Gain from effectiveness improvement"),
Amount = as.numeric(gsub(",", "", gsub("\\$", "", Amount))),
gain = Amount[1]-Amount)
df1 <- df1 %>%
mutate(axis = c("Baseline lost value (all nets)", "Gain from loss reduction",
"Gain from usage improvement", "Gain from bioefficacy improvement", "Lost value with wear and tear improvement",
"Gain from effectiveness improvement", "Gain from reduction in coverage need"),
Amount = as.numeric(gsub(",", "", gsub("\\$", "", Amount))),
gain = Amount[1]-Amount)
df1$lab <- "Gains due to improvements from baseline loss ($)"
df1 <- df1 %>%
mutate(axis = c("Baseline lost value (all nets)", "Gain from loss reduction",
"Gain from usage improvement", "Gain from bioefficacy improvement", "Lost value with wear and tear improvement",
"Gain from effectiveness improvement", "Gain from reduction in coverage need"),
Amount = as.numeric(gsub(",", "", gsub("\\$", "", Amount))),
gain = Amount[1]-Amount,
gain[7] = Amount[7])
df1[7,5] <- df1[7,3]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
